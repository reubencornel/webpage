(gen-html
 "compile_sbcl.html"
 (page
  (pagetitle "Compiling Lisp programs using SBCL")
  (content
   (p "Perhaps the most common question any newbie to lisp asks if
there is a way to compile lisp code into an executable. The responses
to that vary from a very vague kindoff, but why would you need such a
thing to a go-buy-a-commercial-lisp. But before that I must inform you dear
reader that I have tested this only on my Mac. I guess it will work on
Linux but I have no idea if the same would work on Windows")

   (br)
   (p "The other day I happened to be looking into the " 
      (reference "http://www.sbcl.org" "sbcl")
      (reference "http://www.sbcl.org/manual" "manual" )" and I
stumbled across an api in sb-ext called " (reference "http://www.sbcl.org/manual/Saving-a-Core-Image.html#Saving-a-Core-Image" "save-lisp-and-die")
". This function call saves the state of environment at that point of
   time along with all libraries to the disk. The point where this got
   interesting was when I read that I could pass it a keyword argument that
   could make the image executable.")

   (br)
   (p "There are a couple of things to note about this function
   call.") 
   
   (ordered-list
    (list-item "This function all also needs an additional argument
    called :toplevel. This argument is used to indicate the entry
    point function for the program. Lets call this the main function.")
    (list-item "The main function must have an " (b "explicit call") "
    to  (quit).")) 
   
   (br)
   (p "Once you have have a main function all you need to do is to
   fire up sbcl. Load the project/file and then type in the following "
   (b "(sb-ext:save-lisp-and-die binary-name :executable t :toplevel
   'main)") ". This would dump out an image file which can be executed and
   that has the name \"binary-name\".")
   
   (br)
   (p "The main drawback of this method is that the binary is HUGE. I
   found that the binary for the very simple hello world program on my
   computer is about 25 MB at the very least with out libraries. But
   then I would use it anyway cause the binary is a lot faster than
   having to wait for the interpreter to start up and then execute the
   script and perhaps more importantly if I wanted to distribute the
   the program I could always compile it and give it away without
   expecting people to know how to compile and use this program.")

   )
  (include-navalpha)
  (include-navbeta)
  ))
